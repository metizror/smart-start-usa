{"version":3,"sources":["components/sections/shop-details/Content.js","components/pages/Shopdetails.js","helper/shophelper.js","components/layouts/Topbar.js","helper/helper.js","components/layouts/Breadcrumbs.js","components/layouts/Quickview.js"],"names":["quickviewtip","Tooltip","wishlisttip","settings","spaceBetween","loop","settingsThumb","slidesPerView","freeMode","watchSlidesVisibility","watchSlidesProgress","SwiperCore","use","Thumbs","Navigation","Content","props","IncrementItem","setState","clicks","state","DecreaseItem","modalshow","lastActiveBox","thumbsSwiper","modalShow","bind","modalClose","event","this","target","value","index","productId","item","getProduct","className","navigation","thumbs","swiper","image","map","i","to","src","process","alt","title","sale","discount","onSwiper","Rating","rating","reviews","length","Intl","NumberFormat","format","price","toFixed","shortdesc","stock","type","name","onClick","onChange","handleChange","readOnly","getCategories","category","slice","cat","id","getTags","tags","tag","handleOutofStock","Tab","Container","defaultActiveKey","Nav","variant","Item","Link","eventKey","Pane","dangerouslySetInnerHTML","__html","htmldesc","review","getAuthor","user","author","commentdate","comment","replies","reply","shopbox","filter","product","parseInt","some","r","includes","OverlayTrigger","placement","overlay","e","sold","goal","style","width","Modal","show","onHide","aria-labelledby","size","centered","Body","Quickview","Component","pagelocation","Shopdetails","content","Topbar","Header","breadcrumb","pagename","match","params","Newsletter","layout","Footer","shopblock","items","recentProduct","timestamp","Date","postdate","getFilteredproducts","products","searchQuery","priceFilter","catgoryFilter","undefined","tagFilter","priceFilterValue","alert","handleDeleteFromWishlist","handleDeleteFromCart","count","setCategoriesCount","today","month","getTime","getDate","getMonth","getFullYear","setDemoDate","stars","push","pageUrl","window","location","href","getSocialShare","iconstyle","iconClass","link","encodeURIComponent","Breadcrumbs","backgroundImage","modalContent"],"mappings":"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","file":"static/js/28.86f02b80.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getProduct, handleOutofStock, getCategories, getTags } from '../../../helper/shophelper';\r\nimport shopbox from '../../../data/shop/shop.json';\r\nimport { Rating, getAuthor } from '../../../helper/helper';\r\nimport Quickview from '../../layouts/Quickview';\r\nimport { OverlayTrigger, Tooltip, Modal, Tab, Nav } from \"react-bootstrap\";\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { Thumbs, Navigation } from 'swiper';\r\n\r\nconst quickviewtip = (\r\n    <Tooltip>\r\n        Quick View\r\n    </Tooltip>\r\n);\r\nconst wishlisttip = (\r\n    <Tooltip>\r\n        Add to Wishlist\r\n    </Tooltip>\r\n);\r\n\r\nconst settings = {\r\n    spaceBetween: 15,\r\n    loop: true\r\n};\r\nconst settingsThumb = {\r\n    spaceBetween: 15,\r\n    slidesPerView: 5,\r\n    freeMode: true,\r\n    watchSlidesVisibility: true,\r\n    watchSlidesProgress: true\r\n}\r\n// install Swiper components\r\nSwiperCore.use([Thumbs, Navigation]);\r\n\r\nclass Content extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalshow: false,\r\n            lastActiveBox: -1,\r\n            clicks: 1,\r\n            thumbsSwiper: null\r\n        };\r\n        this.modalShow = this.modalShow.bind(this);\r\n        this.modalClose = this.modalClose.bind(this);\r\n    }\r\n    IncrementItem = () => {\r\n        this.setState({ clicks: this.state.clicks + 1 });\r\n    };\r\n\r\n    DecreaseItem = () => {\r\n        if (this.state.clicks < 1) {\r\n            this.setState({\r\n                clicks: 0,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                clicks: this.state.clicks - 1,\r\n            });\r\n        }\r\n    };\r\n    handleChange(event) {\r\n        this.setState({ clicks: event.target.value });\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            thumbsSwiper: null\r\n        });\r\n    }\r\n\r\n    // Modal\r\n    modalShow(index) {\r\n        this.setState({ modalshow: true, lastActiveBox: index });\r\n    }\r\n    modalClose() {\r\n        this.setState({ modalshow: false });\r\n    }\r\n    render() {\r\n        const productId = this.props.productId;\r\n        const item = getProduct(productId);\r\n        return (\r\n            <Fragment>\r\n                <section className=\"section-padding bg-theme-primary\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-5\">\r\n                                <div className=\"shop-detail-image\">\r\n                                    <div className=\"detail-slider\">\r\n                                        <Swiper className=\"swiper-container gallery-top\" {...settings} navigation thumbs={{ swiper: this.state.thumbsSwiper }}>\r\n                                            {item.image.map((image, i) => (\r\n                                                <SwiperSlide key={i}>\r\n                                                    <Link to=\"#\" className=\"popup\">\r\n                                                        <img src={process.env.PUBLIC_URL + \"/\" + image} className=\"img-fluid full-width\" alt={item.title} />\r\n                                                    </Link>\r\n                                                    <div className=\"shop-type-tag\">\r\n                                                        {item.sale === true ? <div className=\"product-label new type-tag\">\r\n                                                            <span>Sale</span>\r\n                                                        </div> : ''}\r\n                                                        {\r\n                                                            item.discount > 0 || item.discount !== '' ? <div className=\"product-label discount type-tag\">\r\n                                                                <span>-{item.discount}%</span>\r\n                                                            </div> : ''\r\n                                                        }\r\n                                                    </div>\r\n                                                </SwiperSlide>\r\n                                            ))}\r\n                                        </Swiper>\r\n                                        <Swiper className=\"swiper-container gallery-thumbs\" {...settingsThumb} onSwiper={this.state.thumbsSwiper} >\r\n                                            {item.image.map((image, i) => (\r\n                                                <SwiperSlide key={i}>\r\n                                                    <img src={process.env.PUBLIC_URL + \"/\" + image} className=\"img-fluid full-width\" alt={item.title} />\r\n                                                </SwiperSlide>\r\n                                            ))}\r\n                                        </Swiper>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-7\">\r\n                                <div className=\"shop-detail-contents mb-md-40 mt-md-40\">\r\n                                    <div className=\"shop-detail-content-wrapper\">\r\n                                        <h6 className=\"text-custom-black\">{item.title}</h6>\r\n                                    </div>\r\n                                    <div className=\"ratings d-flex mb-xl-20\">\r\n                                        {Rating(item.rating)}\r\n                                        <div className=\"pro-review\"> <span>{item.reviews.length} Reviews</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"price\">\r\n                                        <h5 className=\"text-light-green price-tag\">\r\n                                            <span className=\"text-custom-primary price-tag mr-2\">${new Intl.NumberFormat().format((item.price * (100 - item.discount) / 100).toFixed(2))}</span>\r\n                                            {\r\n                                                item.discount > 0 || item.discount !== '' ? <span className=\"fw-400 fs-14\">${new Intl.NumberFormat().format((item.price).toFixed(2))}</span> : ''\r\n                                            }\r\n                                        </h5>\r\n                                    </div>\r\n                                    <div className=\"product-full-des mb-20\">\r\n                                        <p className=\"mb-0\">{item.shortdesc}</p>\r\n                                    </div>\r\n                                    <div className=\"availibity mt-20\">\r\n                                        <p className=\"text-custom-black fw-600\">Avability:\r\n      {item.stock === true ? <span className=\"text-success ml-2\">In Stock</span> : <span className=\"text-danger ml-2\">Out Of Stock</span>}\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\"quantity mb-xl-20\">\r\n                                        <p className=\"text-custom-black mb-0 mr-2 fw-600\">Qty:</p>\r\n                                        <div className=\"product-qty-input\">\r\n                                            <button className=\"minus-btn\" type=\"button\" name=\"button\" onClick={this.DecreaseItem}> <i className=\"fas fa-minus\" />\r\n                                            </button>\r\n                                            <input type=\"text\" className=\"form-control form-control-qty text-center\" name=\"name\" value={this.state.clicks} onChange={this.handleChange.bind(this)} readOnly />\r\n                                            <button className=\"plus-btn\" type=\"button\" name=\"button\" onClick={this.IncrementItem}> <i className=\"fas fa-plus\" />\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"shop-bottom\">\r\n                                        <div className=\"shop-meta mt-20\">\r\n                                            <p className=\"text-custom-black mb-0 fw-600\">Categories:</p>\r\n                                            <ul className=\"list-inline ml-2\">\r\n                                                {getCategories(item.category).slice(0, 3).map((cat, i) => (\r\n                                                    <li className=\"list-inline-item\" key={i}>\r\n                                                        <Link to={\"/shop/cat/\" + cat.id}>{cat.title}</Link>\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        </div>\r\n                                        <div className=\"shop-meta mt-20\">\r\n                                            <p className=\"text-custom-black mb-0 fw-600\">Tags:</p>\r\n                                            <ul className=\"list-inline ml-2\">\r\n                                                {getTags(item.tags).slice(0, 3).map((tag, i) => (\r\n                                                    <li className=\"list-inline-item\" key={i}>\r\n                                                        <Link to={\"/shop/tag/\" + tag.id}>{tag.title}</Link>\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        </div>\r\n                                        <div className=\"product-btn mt-20\">\r\n                                            {item.stock === true ? <button type=\"button\" className=\"btn-solid with-line ml-2\">Add To Cart</button> : <button type=\"button\" className=\"btn-solid with-line ml-2\" onClick={handleOutofStock}>Add To Cart </button>}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12\">\r\n                                <div className=\"shop-detail-description-sec\">\r\n                                    <div className=\"tabs\">\r\n                                        <Tab.Container defaultActiveKey=\"tab1\">\r\n                                            <Nav variant=\"tabs\">\r\n                                                <Nav.Item>\r\n                                                    <Nav.Link eventKey=\"tab1\">Description</Nav.Link>\r\n                                                </Nav.Item>\r\n                                                <Nav.Item>\r\n                                                    <Nav.Link eventKey=\"tab2\">Reviews ({item.reviews.length})</Nav.Link>\r\n                                                </Nav.Item>\r\n                                            </Nav>\r\n                                            <Tab.Content>\r\n                                                <Tab.Pane eventKey=\"tab1\" dangerouslySetInnerHTML={{ __html: item.htmldesc }}></Tab.Pane>\r\n                                                <Tab.Pane eventKey=\"tab2\">\r\n                                                    {/* comments */}\r\n                                                    <div className=\"comment-box p-relative\">\r\n                                                        <div id=\"comment-box\">\r\n                                                            <ul className=\"comments\">\r\n                                                                {item.reviews.map((review, i) => (\r\n                                                                    <li key={i} className=\"comment\">\r\n                                                                        {getAuthor(review.user).map((author, i) => (\r\n                                                                            <article key={i}>\r\n                                                                                <div className=\"comment-avatar \">\r\n                                                                                    <img src={process.env.PUBLIC_URL + \"/\" + author.image} className=\"rounded-circle\" alt={author.name} />\r\n                                                                                </div>\r\n                                                                                <div className=\"comment-content\">\r\n                                                                                    <div className=\"comment-meta\">\r\n                                                                                        <div className=\"comment-meta-header\">\r\n                                                                                            <h6 className=\"text-color-secondary fw-500 author mb-3\">{author.name}</h6>\r\n                                                                                            <div className=\"post-date\">\r\n                                                                                                <div className=\"date bg-custom-black\">{review.commentdate}</div>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                        <div className=\"comment-meta-reply\"> <Link to=\"#\" className=\"comment-reply-link btn-first red-btn text-custom-black\">Reply</Link>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div className=\"comment\">\r\n                                                                                        <p>{review.comment}</p>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </article>\r\n                                                                        ))}\r\n                                                                        <ul className=\"children\">\r\n                                                                            {review.replies.map((reply, i) => (\r\n                                                                                <li className=\"comment\" key={i}>\r\n                                                                                    {getAuthor(reply.user).map((author, i) => (\r\n                                                                                        <article key={i}>\r\n                                                                                            <div className=\"comment-avatar \">\r\n                                                                                                <img src={process.env.PUBLIC_URL + \"/\" + author.image} className=\"rounded-circle\" alt={author.name} />\r\n                                                                                            </div>\r\n                                                                                            <div className=\"comment-content\">\r\n                                                                                                <div className=\"comment-meta\">\r\n                                                                                                    <div className=\"comment-meta-header\">\r\n                                                                                                        <h6 className=\"text-color-secondary fw-500 author mb-3\">{author.name}</h6>\r\n                                                                                                        <div className=\"post-date\">\r\n                                                                                                            <div className=\"date bg-custom-black\">{reply.commentdate}</div>\r\n                                                                                                        </div>\r\n                                                                                                    </div>\r\n                                                                                                    <div className=\"comment-meta-reply\"> <Link to=\"#\" className=\"comment-reply-link btn-first red-btn text-custom-black\">Reply</Link>\r\n                                                                                                    </div>\r\n                                                                                                </div>\r\n                                                                                                <div className=\"comment\">\r\n                                                                                                    <p>{reply.comment}</p>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </article>\r\n                                                                                    ))}\r\n                                                                                </li>\r\n                                                                            ))}\r\n                                                                        </ul>\r\n                                                                    </li>\r\n                                                                ))}\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {/* comments */}\r\n                                                </Tab.Pane>\r\n                                            </Tab.Content>\r\n                                        </Tab.Container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                {/* Related products */}\r\n                <section className=\"section-padding shop-description\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"section-header-left title\">\r\n                                    <h3 className=\"text-light-black header-title \">Related Items</h3>\r\n                                    <span className=\"fs-14\">\r\n                                        <Link to=\"/shop-left\">See all</Link>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            {shopbox.filter(product => { return parseInt(product.id) !== parseInt(productId) && product.category.some(r => item.category.includes(r)) }).slice(0, 4).map((product, i) => (\r\n                                <div className=\"col-xl-3 col-lg-3 col-md-6 col-sm-6\" key={i}>\r\n                                    <div className=\"product-box mb-md-20\">\r\n                                        <div className=\"product-img\">\r\n                                            <Link to={\"/shop-details/\" + product.id}>\r\n                                                <img src={process.env.PUBLIC_URL + \"/\" + product.image[0]} className=\"img-fluid full-width\" alt={product.title} />\r\n                                            </Link>\r\n                                            <div className=\"product-badge\">\r\n                                                {product.sale === true ?\r\n                                                    <div className=\"product-label new\">\r\n                                                        <span>Sale</span>\r\n                                                    </div>\r\n                                                    : ''}\r\n                                                {product.discount > 0 || product.discount !== '' ? <div className=\"product-label discount\">\r\n                                                    <span>-{product.discount}%</span>\r\n                                                </div> : ''}\r\n\r\n                                            </div>\r\n                                            <div className=\"button-group\">\r\n                                                <OverlayTrigger placement=\"left\" overlay={wishlisttip}>\r\n                                                    <Link to=\"#\" > <i className=\"pe-7s-like\" /> </Link>\r\n                                                </OverlayTrigger>\r\n                                                <OverlayTrigger placement=\"left\" overlay={quickviewtip}>\r\n                                                    <Link to=\"#\" onClick={(e) => this.modalShow(product.id)}> <i className=\"pe-7s-search\" /> </Link>\r\n                                                </OverlayTrigger>\r\n                                            </div>\r\n                                            <div className=\"cart-hover\">\r\n                                                {product.stock === true ? <button type=\"button\" className=\"btn-cart fw-600\">Add To Cart</button> : <button type=\"button\" className=\"btn-cart fw-600\" onClick={handleOutofStock}>Add To Cart</button>}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"product-caption text-center\">\r\n                                            <div className=\"product-status\">\r\n                                                <ul className=\"product-raised\">\r\n                                                    <li><strong>Distribute:</strong> {new Intl.NumberFormat().format(product.sold)}</li>\r\n                                                    <li><strong>Goal:</strong><span className=\"text-highlight\"> {new Intl.NumberFormat().format(product.goal)}</span></li>\r\n                                                </ul>\r\n                                                <div className=\"progress\">\r\n                                                    <div className=\"progress-bar progress-bar-color\" style={{ width: (product.sold * 100) / product.goal + '%' }} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <h6 className=\"product-title fw-500 mt-10\"><Link to={\"/shop-details/\" + product.id} className=\"text-color-secondary\">{product.title}</Link></h6>\r\n                                            <div className=\"product-money mt-10\">\r\n                                                <span className=\"text-light-green fw-600 fs-16\">${new Intl.NumberFormat().format((product.price * (100 - product.discount) / 100).toFixed(2))}</span>{\r\n                                                    product.discount > 0 || product.discount !== '' ? <span className=\"text-price\">${new Intl.NumberFormat().format((product.price).toFixed(2))}</span> : ''\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                            {/* Modal (Quick View) */}\r\n                            <Modal show={this.state.modalshow} className=\"quick-view-modal\" onHide={this.modalClose} aria-labelledby=\"contained-modal-title-vcenter\" size=\"lg\" centered>\r\n                                <Modal.Body>\r\n                                    <button type=\"button\" className=\"close\" onClick={this.modalClose}>×</button>\r\n                                    <Quickview productId={this.state.lastActiveBox} />\r\n                                </Modal.Body>\r\n                            </Modal>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Content;","import React, { Component, Fragment } from 'react';\r\nimport MetaTags from \"react-meta-tags\";\r\nimport Topbar from '../layouts/Topbar';\r\nimport Header from '../layouts/Header';\r\nimport Footer from '../layouts/Footer';\r\nimport Newsletter from '../layouts/Newsletter';\r\nimport Breadcrumb from '../layouts/Breadcrumbs';\r\nimport Content from '../sections/shop-details/Content';\r\n\r\nconst pagelocation = \"Shop Details\";\r\n\r\nclass Shopdetails extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <MetaTags>\r\n                    <title>Nina - Museum & Shop - React Template | {pagelocation}</title>\r\n                    <meta\r\n                        name=\"description\"\r\n                        content=\"#\"\r\n                    />\r\n                </MetaTags>\r\n                <Topbar />\r\n                <Header />\r\n                <Breadcrumb breadcrumb={{ pagename: pagelocation }} />\r\n                <Content productId={this.props.match.params.id}/>\r\n                <Newsletter layout=\"bg-theme-primary\" />\r\n                <Footer />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Shopdetails;","import shopblock from \"../data/shop/shop.json\";\r\nimport category from \"../data/shop/category.json\";\r\nimport tags from \"../data/shop/tag.json\";\r\n\r\n// Product details\r\nfunction getProduct(id) {\r\n    return shopblock.filter(product => { return product.id === parseInt(id) })[0];\r\n}\r\n// Categroy\r\nfunction getCategories(items) {\r\n    var elems = category.filter((item) => {\r\n        return items.includes(item.id)\r\n    });\r\n    return elems;\r\n}\r\nfunction getTags(items) {\r\n    var elems = tags.filter((item) => {\r\n        return items.includes(item.id)\r\n    });\r\n    return elems;\r\n}\r\n// Count Category\r\nfunction setCategoriesCount() {\r\n    for (let i = 0; i < category.length; i++) {\r\n        var count = shopblock.filter(product => { return product.category.includes(parseInt(category[i].id)) });\r\n        count = count.length;\r\n        category[i].count = count;\r\n    }\r\n}\r\nsetCategoriesCount();\r\n// Recent post\r\nfunction changeToMonth(month) {\r\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    return months[month];\r\n}\r\nfunction setDemoDate() {\r\n    var today = new Date();\r\n    shopblock.slice(0, 4).map((item) => {\r\n        item.timestamp = today.getTime() - (3 * 24 * 60 * 60 * 1000);\r\n        // Remove this date on your live demo. This is only used for preview purposed. Your date should actually be updated\r\n        // in the blog.json object\r\n        item.postdate = `${today.getDate() - 2} ${changeToMonth(today.getMonth())}, ${today.getFullYear()}`;\r\n        return item;\r\n    });\r\n}\r\nsetDemoDate();\r\nfunction recentProduct() {\r\n    var elems = shopblock.filter((item) => {\r\n        return item.timestamp < new Date(item.postdate);\r\n    });\r\n    return elems;\r\n}\r\n\r\n// Filter\r\nfunction getFilteredproducts(products, filter = { cat: '', tag: '', searchQuery: '', priceFilter: [] }) {\r\n    var catgoryFilter = filter.cat !== undefined && filter.cat !== null && filter.cat !== '';\r\n    var tagFilter = filter.tag !== undefined && filter.tag !== null && filter.tag !== '';\r\n    var priceFilterValue = filter.priceFilter[0] !== undefined && filter.priceFilter[1] !== undefined && filter.priceFilter[0] !== null && filter.priceFilter[1] != null && filter.priceFilter[0] !== '' && filter.priceFilter[1] !== '';\r\n    // Category filter\r\n    if (catgoryFilter) {\r\n        products = products.filter(product => {\r\n            return (product.category !== undefined && product.category !== null) && product.category.includes(parseInt(filter.cat))\r\n        })\r\n    }\r\n    // Tag filter\r\n    if (tagFilter) {\r\n        products = products.filter(product => {\r\n            return (product.tags !== undefined && product.tags !== null) && product.tags.includes(parseInt(filter.tag))\r\n        })\r\n    }\r\n    if (priceFilterValue) {\r\n        products = products.filter(product => {\r\n            return (product.price !== undefined && product.price !== null) && product.price > filter.priceFilter[0] && product.price <= filter.priceFilter[1]\r\n        })\r\n    }\r\n    return products;\r\n}\r\n\r\nfunction handleOutofStock() {\r\n    alert('Product Out of Stock')\r\n}\r\nfunction handleDeleteFromWishlist() {\r\n    alert('Are you sure you want to delete this item from your Wishlist?')\r\n}\r\nfunction handleDeleteFromCart() {\r\n    alert('Are you sure you want to delete all this item from your cart?')\r\n}\r\nexport { getProduct, getCategories, getTags, recentProduct, handleOutofStock, handleDeleteFromWishlist, handleDeleteFromCart, getFilteredproducts };","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst wishlistlength = 5;\r\nconst cartlength = 5;\r\n\r\nclass Topbar extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"top-header\">\r\n                <div className=\"container-fluid custom-container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"top-left\">\r\n                                <ul className=\"top-info\">\r\n                                    <li><Link to=\"#\"><i className=\"fas fa-phone-alt\" /> +000 123 45678</Link></li>\r\n                                    <li><Link to=\"#\"><i className=\"fas fa-envelope\" /> info@example.com</Link></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"righ-sec\">\r\n                                <div className=\"top-right\">\r\n                                    <ul className=\"list-inline\">\r\n                                        <li className=\"list-inline-item\"><Link to=\"#\"><i className=\"fab fa-facebook-square\" /></Link> </li>\r\n                                        <li className=\"list-inline-item\"><Link to=\"#\"><i className=\"fab fa-twitter-square\" /></Link> </li>\r\n                                        <li className=\"list-inline-item\"><Link to=\"#\"><i className=\"fab fa-instagram\" /></Link> </li>\r\n                                        <li className=\"list-inline-item\"><Link to=\"#\"><i className=\"fab fa-linkedin\" /></Link> </li>\r\n                                        <li className=\"list-inline-item\"><Link to=\"#\"><i className=\"fab fa-youtube\" /></Link> </li>\r\n                                    </ul>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Topbar;","\r\nimport author from '../data/authors.json';\r\nfunction Rating(rating) {\r\n    let stars = [];\r\n    for (let i = 0; i < 5; i++) {\r\n        stars.push(<span className=\"text-dark-white\" key={i}><i className=\"fas fa-star\" /></span>);\r\n    }\r\n    if (rating && rating > 0) {\r\n        for (let i = 0; i <= rating - 1; i++) {\r\n            stars[i] = <span className=\"text-dark-white text-yellow\" key={i}><i className=\"fas fa-star\" /></span>;\r\n        }\r\n    }\r\n    return stars;\r\n};\r\n// Social Share\r\nconst pageUrl = window.location.href;\r\nfunction getSocialShare(title) {\r\n    var socialIcons = [\r\n        {\r\n            title: \"facebook\",\r\n            iconstyle: \"fb\",\r\n            iconClass: \"fab fa-facebook-f\",\r\n            link: \"https://www.facebook.com/sharer/sharer.php?u=\" + encodeURIComponent(pageUrl) + \"\"\r\n        },\r\n        {\r\n            title: \"twitter\",\r\n            iconstyle: \"tw\",\r\n            iconClass: \"fab fa-twitter\",\r\n            link: \"http://twitter.com/intent/tweet?text=\" + encodeURIComponent(title) + \"&\" + encodeURIComponent(pageUrl) + \"\"\r\n        },\r\n        {\r\n            title: \"linkedin\",\r\n            iconstyle: \"ln\",\r\n            iconClass: \"fab fa-linkedin-in\",\r\n            link: \"https://www.linkedin.com/shareArticle?mini=true&url=\" + encodeURIComponent(pageUrl) + \"&title=\" + encodeURIComponent(title) + \"\"\r\n        },\r\n        {\r\n            title: \"pinterest\",\r\n            iconstyle: \"gg\",\r\n            iconClass: \"fab fa-pinterest-p\",\r\n            link: \"http://pinterest.com/pin/create/button/?url=\" + encodeURIComponent(pageUrl) + \"\"\r\n        }\r\n    ];\r\n    return socialIcons;\r\n}\r\nfunction getAuthor(items) {\r\n    var elems = author.filter((item) => {\r\n        return items.includes(item.id)\r\n    });\r\n    return elems;\r\n}\r\nexport { Rating, getSocialShare, getAuthor };","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Breadcrumbs extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"breadcrumb-area\" style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/assets/img/innerbanner.jpg)\" }}>\r\n                <div className=\"overlay overlay-bg\" />\r\n                <div className=\"container\">\r\n                    <div className=\"breadcrumb-content\">\r\n                        <h2>{this.props.breadcrumb.pagename}</h2>\r\n                        <ul>\r\n                            <li><Link to=\"/\">Home</Link>\r\n                            </li>\r\n                            <li className=\"active\">{this.props.breadcrumb.pagename}</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Breadcrumbs;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { getProduct, handleOutofStock, getCategories, getTags } from '../../helper/shophelper';\r\nimport { Rating } from '../../helper/helper';\r\n\r\nclass Quickview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clicks: 1\r\n        };\r\n    }\r\n    IncrementItem = () => {\r\n        this.setState({ clicks: this.state.clicks + 1 });\r\n    };\r\n\r\n    DecreaseItem = () => {\r\n        if (this.state.clicks < 1) {\r\n            this.setState({\r\n                clicks: 0,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                clicks: this.state.clicks - 1,\r\n            });\r\n        }\r\n    };\r\n    handleChange(event) {\r\n        this.setState({ clicks: event.target.value });\r\n    }\r\n    render() {\r\n        const productId = this.props.productId;\r\n        const modalContent = getProduct(productId);\r\n        return (\r\n            <div className=\"product-details-inner\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-5 align-self-center\">\r\n                        <div className=\"shop-detail-image\">\r\n                            <div className=\"detail-slider\">\r\n                                <div className=\"swiper-container\">\r\n                                    <div className=\"swiper-wrapper\">\r\n                                        <div className=\"swiper-slide\">\r\n                                            <Link to={\"/shop-details/\" + modalContent.id} className=\"popup\">\r\n                                                <img src={process.env.PUBLIC_URL + \"/\" + modalContent.image[0]} className=\"img-fluid full-width\" alt={modalContent.title} />\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-7\">\r\n                        <div className=\"shop-detail-contents mb-md-40 mt-md-40\">\r\n                            <div className=\"shop-detail-content-wrapper\">\r\n                                <h3 className=\"text-custom-black\">{modalContent.title}</h3>\r\n                            </div>\r\n                            <div className=\"ratings d-flex mb-xl-20\">\r\n                                {Rating(modalContent.rating)}\r\n                                <div className=\"pro-review\"> <span>{modalContent.reviews.length} Reviews</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"price\">\r\n                                <h4 className=\"text-custom-red price-tag\">\r\n                                    <span className=\"text-custom-red price-tag mr-2\">${new Intl.NumberFormat().format((modalContent.price * (100 - modalContent.discount) / 100).toFixed(2))}</span>\r\n                                    {\r\n                                        modalContent.discount > 0 || modalContent.discount !== '' ? <span className=\"text-light-white fw-400 fs-14\">${new Intl.NumberFormat().format((modalContent.price).toFixed(2))}</span> : ''\r\n                                    }\r\n                                </h4>\r\n                            </div>\r\n                            <div className=\"product-full-des mb-20\">\r\n                                <p className=\"mb-0\">{modalContent.shortdesc}</p>\r\n                            </div>\r\n                            <div className=\"availibity mt-20\">\r\n                                <h6 className=\"text-custom-black fw-600\">Avability:\r\n          {modalContent.stock === true ? <span className=\"text-success ml-2\">In Stock</span> : <span className=\"text-danger ml-2\">Out Of Stock</span>}\r\n                                </h6>\r\n                            </div>\r\n                            <div className=\"quantity mb-xl-20\">\r\n                                <h6 className=\"text-custom-black mb-0 mr-2 fw-600\">Qty:</h6>\r\n                                <div className=\"product-qty-input\">\r\n                                    <button className=\"minus-btn\" type=\"button\" name=\"button\" onClick={this.DecreaseItem}> <i className=\"fas fa-minus\" />\r\n                                    </button>\r\n                                    <input type=\"text\" className=\"form-control form-control-qty text-center\" name=\"name\" value={this.state.clicks} onChange={this.handleChange.bind(this)} readOnly />\r\n                                    <button className=\"plus-btn\" type=\"button\" name=\"button\" onClick={this.IncrementItem}> <i className=\"fas fa-plus\" />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"shop-bottom\">\r\n                                <div className=\"shop-meta mt-20\">\r\n                                    <h6 className=\"text-custom-black mb-0 fw-600\">Categories:</h6>\r\n                                    <ul className=\"list-inline ml-2\">\r\n                                        {getCategories(modalContent.category).slice(0, 3).map((cat, i) => (\r\n                                            <li className=\"list-inline-item\" key={i}>\r\n                                                <Link to={\"/shop/cat/\" + cat.id}>{cat.title}</Link>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"shop-meta mt-20\">\r\n                                    <h6 className=\"text-custom-black mb-0 fw-600\">Tags:</h6>\r\n                                    <ul className=\"list-inline ml-2\">\r\n                                        {getTags(modalContent.tags).slice(0, 3).map((tag, i) => (\r\n                                            <li className=\"list-inline-item\" key={i}>\r\n                                                <Link to={\"/shop/tag/\" + tag.id}>{tag.title}</Link>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"product-btn mt-20\">\r\n                                    {modalContent.stock === true ? <button type=\"button\" className=\"btn-solid with-line ml-2\">Add To Cart <i className=\"pe-7s-cart\" /></button> : <button type=\"button\" className=\"btn-solid with-line ml-2\" onClick={handleOutofStock}>Add To Cart <i className=\"pe-7s-cart\" /></button>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Quickview;"],"sourceRoot":""}