{"version":3,"sources":["helper/bloghelper.js","components/layouts/Topbar.js"],"names":["getCategories","items","blogcategory","filter","item","includes","id","getTags","blogtags","getBlog","blogpost","blog","parseInt","getRecentPost","post","timestamp","Date","postdate","getFilteredPosts","posts","cat","tag","author","searchQuery","catgoryFilter","undefined","tagFilter","authorFilter","searchFilter","category","tags","title","toLowerCase","i","count","length","setCategoriesCount","today","slice","map","month","getTime","getDate","getMonth","getFullYear","setDemoDate","Topbar","className","to","Component"],"mappings":"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","file":"static/js/4.73e62892.chunk.js","sourcesContent":["import blogpost from \"../data/blog/blog.json\";\r\nimport blogcategory from '../data/blog/blogcategory.json';\r\nimport blogtags from '../data/blog/blogtags.json';\r\n// Get Category\r\nfunction getCategories(items) {\r\n    var elems = blogcategory.filter(item => {\r\n        return items.includes(item.id)\r\n    });\r\n    return elems;\r\n}\r\n// Tags\r\nfunction getTags(items) {\r\n    var elems = blogtags.filter(item => {\r\n        return items.includes(item.id)\r\n    });\r\n    return elems;\r\n}\r\n\r\nfunction setCategoriesCount() {\r\n    for (let i = 0; i < blogcategory.length; i++) {\r\n        var count = blogpost.filter(post => { return post.category.includes(parseInt(blogcategory[i].id)) });\r\n        count = count.length;\r\n        blogcategory[i].count = count;\r\n    }\r\n}\r\nsetCategoriesCount();\r\n// Post details\r\nfunction getBlog(id) {\r\n    return blogpost.filter(blog => { return blog.id === parseInt(id) })[0];\r\n}\r\n// Recent post\r\nfunction changeToMonth(month) {\r\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    return months[month];\r\n}\r\n\r\nfunction setDemoDate() {\r\n    var today = new Date();\r\n    blogpost.slice(0, 3).map(post => {\r\n        post.timestamp = today.getTime() - (3 * 24 * 60 * 60 * 1000);\r\n        // Remove this date on your live demo. This is only used for preview purposed. Your date should actually be updated\r\n        // in the blog.json object\r\n        post.postdate = `${today.getDate() - 2} ${changeToMonth(today.getMonth())}, ${today.getFullYear()}`;\r\n        return post;\r\n    });\r\n}\r\n\r\nfunction getRecentPost() {\r\n    var elems = blogpost.filter(post => {\r\n        return post.timestamp < new Date(post.postdate);\r\n    });\r\n    return elems;\r\n}\r\n\r\nsetDemoDate();\r\n// Filter\r\nfunction getFilteredPosts(posts, filter = { cat: '', tag: '', author: '', searchQuery: '' }) {\r\n    var catgoryFilter = filter.cat !== undefined && filter.cat !== null && filter.cat !== '';\r\n    var tagFilter = filter.tag !== undefined && filter.tag !== null && filter.tag !== '';\r\n    var authorFilter = filter.author !== undefined && filter.author !== null && filter.author !== '';\r\n    var searchFilter = filter.searchQuery !== undefined && filter.searchQuery !== null && filter.searchQuery !== '';\r\n    // Category filter\r\n    if (catgoryFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.category !== undefined && post.category !== null) && post.category.includes(parseInt(filter.cat))\r\n        })\r\n    }\r\n    // Tag filter\r\n    if (tagFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.tags !== undefined && post.tags !== null) && post.tags.includes(parseInt(filter.tag))\r\n        })\r\n    }\r\n    //Author filter\r\n    if (authorFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.author !== undefined && post.author !== null) && post.author.includes(parseInt(filter.author))\r\n        })\r\n    }\r\n    if (searchFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.title !== undefined && post.title !== null) && post.title.toLowerCase().includes(filter.searchQuery.toLowerCase())\r\n        })\r\n    }\r\n    return posts;\r\n}\r\nexport { getBlog, getCategories, getTags, getFilteredPosts, getRecentPost };","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst wishlistlength = 5;\r\nconst cartlength = 5;\r\n\r\nclass Topbar extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"top-header\">\r\n                <div className=\"container-fluid custom-container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"top-left\">\r\n                                <ul className=\"top-info\">\r\n                                    <li><Link to=\"#\"><i className=\"fas fa-phone-alt\" /> +000 123 45678</Link></li>\r\n                                    <li><Link to=\"#\"><i className=\"fas fa-envelope\" /> info@example.com</Link></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"righ-sec\">\r\n                                <div className=\"top-right\">\r\n                                    <ul className=\"list-inline\">\r\n                                        <li className=\"list-inline-item\"><Link to=\"#\"><i className=\"fab fa-facebook-square\" /></Link> </li>\r\n                                        <li className=\"list-inline-item\"><Link to=\"#\"><i className=\"fab fa-twitter-square\" /></Link> </li>\r\n                                        <li className=\"list-inline-item\"><Link to=\"#\"><i className=\"fab fa-instagram\" /></Link> </li>\r\n                                        <li className=\"list-inline-item\"><Link to=\"#\"><i className=\"fab fa-linkedin\" /></Link> </li>\r\n                                        <li className=\"list-inline-item\"><Link to=\"#\"><i className=\"fab fa-youtube\" /></Link> </li>\r\n                                    </ul>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Topbar;"],"sourceRoot":""}